{"version":3,"sources":["style.css"],"names":[],"mappings":"iBAIA,KACE,YAAa,YAAa,WAC1B,UAAW,KACX,UAAW,MACX,OAAQ,EAAE,KACV,MAAO,KACP,WAAY","file":"style.css","sourcesContent":["@charset \"utf-8\";\n/*\nLESS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: @icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n@icon-home: x y offset_x offset_y width height total_width total_height image_path name;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n@spritesheet: width height image @spritesheet-sprites;\n*/\n/*\nThe provided classes are intended to be used with the array-like variables\n\n.icon-home {\n  .sprite-width(@icon-home);\n}\n.icon-email {\n  .sprite(@icon-email);\n}\n\nExample usage in HTML:\n\n`display: block` sprite:\n<div class=\"icon-home\"></div>\n\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n\n// CSS\n.icon {\n  display: inline-block;\n}\n\n// HTML\n<i class=\"icon icon-home\"></i>\n*/\n/*\nThe `.sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of LESS\n\nThis must be run when you have at least 2 sprites.\n  If run with a single sprite, then there will be reference errors.\n\n.sprites(@spritesheet-sprites);\n*/\nbody {\n  font-family: 'Open Sans', sans-serif;\n  font-size: 16px;\n  min-width: 320px;\n  margin: 0 auto;\n  color: #000;\n  background: #fff;\n}\n"],"sourceRoot":"/source/"}